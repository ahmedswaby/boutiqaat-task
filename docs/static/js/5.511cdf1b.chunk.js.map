{"version":3,"sources":["components/card.jsx","components/carousel.jsx"],"names":["Card","slider","className","src","imageUrl","alt","label","defaultProps","PropTypes","object","isRequired","Carousel","slidersData","useState","firsRow","setFirsRow","secondRow","setsecondRow","settings","slidesPerView","spaceBetween","breakpoints","320","480","992","useEffect","rowCount","recordCount","lengthDive","Math","ceil","firstRowsData","banners","filter","item","index","secondRowsData","rowCounts","map","id"],"mappings":"wKAKA,SAASA,EAAT,GAAyB,IAAVC,EAAS,EAATA,OACX,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAOG,SAAUF,UAAU,eAAeG,IAAI,QACxD,qBAAKH,UAAU,YAAf,SACI,mBAAGA,UAAU,YAAb,SAA0BD,EAAOK,aAOjDN,EAAKO,aAAe,CAChBN,OAAQO,IAAUC,OAAOC,YAGdV,Q,gBChBf,SAASW,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,YAAe,EACDC,mBAAS,IADR,mBACxBC,EADwB,KACfC,EADe,OAEGF,mBAAS,IAFZ,mBAExBG,EAFwB,KAEbC,EAFa,KAgBzBC,EAAW,CACbC,cAAe,EACfC,aAAc,GACdC,YAAa,CAETC,IAAK,CACDH,cAAe,EACfC,aAAc,IAGlBG,IAAK,CACDJ,cAAe,EACfC,aAAc,IAGlBI,IAAK,CACDL,cAAe,EACfC,aAAc,MAQ1B,OAHAK,qBAAU,YAjCQ,WACd,GAAIb,EAAYc,SAAW,GAAKd,EAAYe,YAAc,GAAI,CAC1D,IAAMC,EAAaC,KAAKC,KAAKlB,EAAYe,YAAcf,EAAYc,UAC7DK,EAAgBnB,EAAYoB,QAAQC,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQP,KACpEQ,EAAiBxB,EAAYoB,QAAQC,QAAO,SAACC,EAAMC,GAAP,OAAiBA,GAASP,KAC5Eb,EAAWgB,GACXd,EAAamB,QAEbrB,EAAWH,EAAYoB,SA0B3BK,KACD,IAEC,mCACI,sBAAKnC,UAAU,WAAf,UACI,cAAC,IAAD,2BAAYgB,GAAZ,aACKJ,EAAQwB,KAAI,SAACrC,GAAD,OACb,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,OAAQA,KADAA,EAAOsC,UAM7B,cAAC,IAAD,2BAAYrB,GAAZ,IAAsBhB,UAAU,OAAhC,SACKc,EAAUsB,KAAI,SAACrC,GAAD,OACf,cAAC,IAAD,UACI,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOsC,KADJtC,EAAOsC,eAY7C5B,EAASJ,aAAe,CACpBK,YAAaJ,IAAUC,OAAOC,YAEnBC","file":"static/js/5.511cdf1b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\n// Import Swiper styles\nimport 'swiper/swiper.scss';\nfunction Card({slider}) {\n    return (\n        <div className=\"card\">\n            <img src={slider.imageUrl} className=\"card-img-top\" alt=\"...\" />\n            <div className=\"card-body\">\n                <p className=\"card-text\">{slider.label}</p>\n            </div>\n        </div>\n    );\n}\n\n\nCard.defaultProps = {\n    slider: PropTypes.object.isRequired\n};\n\nexport default Card;\n","import React, { useState, useEffect }from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from './card';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n// Import Swiper styles\nfunction Carousel({ slidersData }) {\n    const [firsRow, setFirsRow] = useState([])\n    const [secondRow, setsecondRow] = useState([])\n\n    // @todo: imporove row conts to work dynamically\n    const rowCounts = () => {\n        if (slidersData.rowCount > 1 && slidersData.recordCount > 10) {\n            const lengthDive = Math.ceil(slidersData.recordCount / slidersData.rowCount)\n            const firstRowsData = slidersData.banners.filter((item, index) => index < lengthDive)\n            const secondRowsData = slidersData.banners.filter((item, index) => index >= lengthDive)\n            setFirsRow(firstRowsData)\n            setsecondRow(secondRowsData)\n        } else {\n            setFirsRow(slidersData.banners)\n        }\n    }\n    const settings = {\n        slidesPerView: 4,\n        spaceBetween: 20,\n        breakpoints: {\n            // when window width is >= 320px\n            320: {\n                slidesPerView: 1,\n                spaceBetween: 15\n            },\n            // when window width is >= 480px\n            480: {\n                slidesPerView: 2,\n                spaceBetween: 15\n            },\n            // when window width is >= 640px\n            992: {\n                slidesPerView: 3,\n                spaceBetween: 20\n            }\n        }\n    }\n\n    useEffect(() => {\n        rowCounts()\n    }, [])\n    return (\n        <>\n            <div className=\"col-md-9\">\n                <Swiper {...settings}>\n                    {firsRow.map((slider) => (\n                    <SwiperSlide key={slider.id}>\n                        <Card slider={slider} />\n                    </SwiperSlide>\n                ))\n                }\n                </Swiper>\n                <Swiper {...settings} className='mt-4'>\n                    {secondRow.map((slider) => (\n                    <SwiperSlide key={slider.id}>\n                        <Card key={slider.id} slider={slider} />\n                    </SwiperSlide>\n                ))\n                }\n                </Swiper>\n            </div>\n\n        </>\n    );\n}\n\nCarousel.defaultProps = {\n    slidersData: PropTypes.object.isRequired\n};\nexport default Carousel;\n"],"sourceRoot":""}